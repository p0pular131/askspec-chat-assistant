
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://jjnlzdxwodurnooflsen.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Impqbmx6ZHh3b2R1cm5vb2Zsc2VuIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDU4ODY0NjQsImV4cCI6MjA2MTQ2MjQ2NH0.49k-yi77mBvWNxonG7PCjIjXEAU3nOlROl4PxxeEWvg";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Fetches compatibility data from demo_compatibility table
export async function fetchCompatibilityData() {
  try {
    const { data, error } = await supabase
      .from('demo_compatibility')
      .select('compat')
      .order('created_at', { ascending: false })
      .limit(1);

    if (error) {
      console.error('Error fetching compatibility data:', error);
      return null;
    }

    // Return the compatibility data if available
    if (data && data.length > 0) {
      return data[0].compat;
    }

    // Return sample data if nothing is found
    return {
      components: ["CPU", "GPU", "RAM", "Motherboard", "Storage"],
      links: [
        { 
          source: "CPU", 
          target: "Motherboard", 
          status: "success",
          reason: null
        },
        { 
          source: "GPU", 
          target: "Motherboard", 
          status: "success",
          reason: null
        },
        { 
          source: "RAM", 
          target: "Motherboard", 
          status: "warning",
          reason: "RAM speed might be limited by motherboard" 
        },
        { 
          source: "Storage", 
          target: "Motherboard", 
          status: "error",
          reason: "Motherboard has no available M.2 slots for this SSD" 
        }
      ]
    };
  } catch (error) {
    console.error('Error fetching compatibility data:', error);
    return null;
  }
}
